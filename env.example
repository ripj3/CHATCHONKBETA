# =======================================================================
# ChatChonk – Example Environment File
# Copy to `.env` in the project root and replace placeholders with your actual values.
# Variables here are used by both backend (FastAPI) and frontend (Next.js) unless specified.
# =======================================================================

# -----------------------------------------------------------------------
# GENERAL BACKEND SETTINGS (FastAPI)
# -----------------------------------------------------------------------
PROJECT_NAME=ChatChonk
ENVIRONMENT=development # Options: development, staging, production
DEBUG=false # Set to true for development debugging, false for production
API_HOST=0.0.0.0 # Host for the backend server to bind to
PORT=8080 # Port for the backend server (FastAPI/Uvicorn)
API_V1_STR=/api # API prefix
CHONK_SECRET_KEY=YOUR_STRONG_SECRET_KEY_HERE_FOR_FASTAPI # Used for JWT, session signing etc. Generate with `openssl rand -hex 32`
API_KEY=chatchonk-api-key-for-development-only # General API key for accessing ChatChonk services, if needed

# -----------------------------------------------------------------------
# DOMAIN & FRONTEND URLs
# These are used by both backend (e.g., for CORS, generating links) and frontend.
# -----------------------------------------------------------------------
DOMAIN=chatchonk.com # Your main domain
FRONTEND_URL=https://chatchonk.com # Full URL for the frontend (production)
API_DOMAIN=api.chatchonk.com # Subdomain for the API (production)
PRODUCTION_API_URL=https://api.chatchonk.com # Full API URL (production)

# For local development, frontend runs on localhost:3000, backend on localhost:8080
LOCAL_FRONTEND_URL=http://localhost:3000
LOCAL_API_URL=http://localhost:8080/api

# CORS Allowed Origins (comma-separated list for backend)
# Should include your local frontend dev URL and production frontend URL
ALLOWED_ORIGINS=http://localhost:3000,https://chatchonk.com,https://your-render-frontend-url.onrender.com

# -----------------------------------------------------------------------
# SUPABASE CONFIGURATION
# -----------------------------------------------------------------------
SUPABASE_URL=YOUR_SUPABASE_PROJECT_URL_HERE # e.g., https://xxxxxxxx.supabase.co
SUPABASE_ANON_KEY=YOUR_SUPABASE_ANON_KEY_HERE # Public anonymous key
SUPABASE_SERVICE_ROLE_KEY=YOUR_SUPABASE_SERVICE_ROLE_KEY_HERE # Secret service role key (for backend admin operations)
SUPABASE_PERSONAL_ACCESS_TOKEN=YOUR_SUPABASE_PERSONAL_ACCESS_TOKEN_HERE # For Supabase CLI or management tasks

# (Optional) Direct DB passwords if self-hosting Supabase or specific needs
SUPABASE_DB_PASSWORD=YOUR_SUPABASE_DATABASE_PASSWORD_HERE
SUPABASE_DB_PASSWORD_MSWAP=YOUR_MSWAP_DATABASE_PASSWORD_HERE # If using a separate DB for ModelSwapper

# -----------------------------------------------------------------------
# SUPABASE STORAGE / S3 COMPATIBLE SETTINGS
# Used if you are configuring S3-compatible storage with Supabase or directly.
# For Supabase's own storage, SUPABASE_URL and keys are usually sufficient.
# -----------------------------------------------------------------------
SUPABASE_STORAGE_URL=${SUPABASE_URL}/storage/v1 # Default Supabase storage URL
SUPABASE_S3_ACCESS_KEY_ID=YOUR_S3_COMPATIBLE_ACCESS_KEY_ID_HERE # e.g., Supabase service key if using it as S3 key
SUPABASE_S3_SECRET_ACCESS_KEY=YOUR_S3_COMPATIBLE_SECRET_ACCESS_KEY_HERE # e.g., Supabase service key
SUPABASE_S3_BUCKET=files # Name of your S3 bucket (matches Supabase Storage bucket name)
SUPABASE_STORAGE_BUCKET=files # Name of your Supabase Storage bucket

# -----------------------------------------------------------------------
# LOCAL FILE SYSTEM PATHS (for backend)
# These paths are relative to where the backend application is run.
# Inside Docker, these will be paths within the container.
# -----------------------------------------------------------------------
UPLOAD_DIR=./uploads # For initial temporary uploads before moving to Supabase (if not direct-to-Supabase)
TEMP_DIR=./tmp # For temporary processing files
EXPORT_DIR=./exports # Where generated export files might be temporarily stored
STORAGE_PATH=./storage # General persistent storage path if not using cloud storage for everything
EPHEMERAL_STORAGE_PATH=./ephemeral_storage # For files that are short-lived
TEMPLATES_DIR=./templates # Location of YAML processing templates for the backend

EPHEMERAL_MAX_AGE_SECONDS=7200 # 2 hours
EPHEMERAL_CLEANUP_INTERVAL=600 # 10 minutes
EPHEMERAL_ENCRYPTION_ENABLED=true
MAX_UPLOAD_SIZE=2147483648 # 2 GB in bytes (for backend validation)
MAX_UPLOAD_SIZE_MB=2048 # 2 GB in MB (for backend validation)

# -----------------------------------------------------------------------
# REDIS CACHING (OPTIONAL – leave blank if not using for MVP)
# -----------------------------------------------------------------------
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=

# -----------------------------------------------------------------------
# AI / ML PROVIDER API KEYS (for AutoModel / ModelSwapper)
# -----------------------------------------------------------------------
HUGGINGFACE_API_KEY=YOUR_HUGGINGFACE_API_KEY_HERE # Required for MVP
HUGGINGFACE_SPACE=YOUR_HUGGINGFACE_SPACE_ID_HERE # If using a private HF Space
HUGGINGFACE_STREAMLIT_URL=YOUR_HUGGINGFACE_STREAMLIT_APP_URL_HERE # If relevant

OPENAI_API_KEY=YOUR_OPENAI_API_KEY_HERE
ANTHROPIC_API_KEY=YOUR_ANTHROPIC_API_KEY_HERE
DEEPSEEK_API_KEY=YOUR_DEEPSEEK_API_KEY_HERE
QWEN_API_KEY=YOUR_QWEN_API_KEY_HERE
MISTRAL_API_KEY=YOUR_MISTRAL_API_KEY_HERE

# -----------------------------------------------------------------------
# GITHUB CONFIGURATION (OPTIONAL - e.g., for version checking, issue reporting from app)
# -----------------------------------------------------------------------
GITHUB_PERSONAL_ACCESS_TOKEN=YOUR_GITHUB_PAT_HERE_IF_NEEDED # Use with caution, scoped permissions

# -----------------------------------------------------------------------
# STRIPE BILLING (OPTIONAL UNTIL PAID TIERS ARE IMPLEMENTED)
# -----------------------------------------------------------------------
STRIPE_PUBLISHABLE_KEY=pk_test_YOUR_STRIPE_PUBLISHABLE_KEY
STRIPE_RESTRICTED_KEY=rk_live_YOUR_STRIPE_SECRET_KEY # For production
STRIPE_RESTRICTED_TEST_KEY=rk_test_YOUR_STRIPE_TEST_SECRET_KEY # For development/testing
STRIPE_WEBHOOK_SECRET=whsec_YOUR_STRIPE_WEBHOOK_SIGNING_SECRET

# Stripe Price IDs – Fill these in when you create products/prices in Stripe
STRIPE_PRICE_LILBEAN=price_xxxxxxxxxxxxxx
STRIPE_PRICE_CLAWBACK=price_xxxxxxxxxxxxxx
STRIPE_PRICE_BIGCHONK=price_xxxxxxxxxxxxxx
STRIPE_PRICE_MEOWTRIX=price_xxxxxxxxxxxxxx
STRIPE_PRICE_CLAWBACK_YEARLY=price_xxxxxxxxxxxxxx
STRIPE_PRICE_BIGCHONK_YEARLY=price_xxxxxxxxxxxxxx
STRIPE_PRICE_MEOWTRIX_YEARLY=price_xxxxxxxxxxxxxx

USE_STRIPE_PLANS=true
STRIPE_PROMO_CODE=YOUR_DEFAULT_PROMO_CODE
STRIPE_PROMO_CODE_YEARLY=YOUR_DEFAULT_YEARLY_PROMO_CODE

# -----------------------------------------------------------------------
# LOGGING & DEBUGGING CONFIGURATION (Backend)
# -----------------------------------------------------------------------
LOG_LEVEL=INFO # Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_FILE=chatchonk.log # Path to log file, if not logging to stdout/stderr
LOG_ROTATION_DAYS=90
ENABLE_AUDIT_LOGGING=true

# -----------------------------------------------------------------------
# SECURITY & VALIDATION SETTINGS (Backend)
# -----------------------------------------------------------------------
ALLOWED_FILE_TYPES=zip,json,txt,md,csv # Comma-separated list of allowed extensions
# MAX_UPLOAD_SIZE_MB is defined under LOCAL FILE SYSTEM PATHS

RATE_LIMIT_REQUESTS=100 # Default rate limit requests
RATE_LIMIT_WINDOW_MINUTES=60 # Default rate limit window

ENABLE_INPUT_VALIDATION=true # For API request payloads
ENABLE_CONTENT_VALIDATION=true # For content within uploaded files (e.g., PII checks)
ENABLE_REQUEST_SIGNING=true # If implementing signed requests between services
REQUEST_SIGNATURE_EXPIRY_SECONDS=300

ENABLE_IP_FILTERING=false
ALLOWED_IPS= # Comma-separated list of IPs if filtering is enabled

# -----------------------------------------------------------------------
# RATE LIMITING CONFIGURATION (Backend)
# -----------------------------------------------------------------------
RATE_LIMIT_ENABLED=false # Set to true in production
RATE_LIMIT_REQUESTS_PER_MINUTE=1000 # Adjust for production needs

# -----------------------------------------------------------------------
# PROMPT & OUTPUT SAFETY FILTERS (Backend - AutoModel)
# -----------------------------------------------------------------------
ENABLE_PROMPT_FILTERING=true
PROMPT_FILTER_LEVEL=medium # Options: low, medium, high
ENABLE_OUTPUT_FILTERING=true
OUTPUT_FILTER_LEVEL=medium

# -----------------------------------------------------------------------
# API ACCESS CONTROL (Backend)
# -----------------------------------------------------------------------
REQUIRE_API_KEY=false # Set to true if general API access requires an API key
API_KEY_EXPIRY_DAYS=90
MAX_API_KEYS_PER_USER=5

# -----------------------------------------------------------------------
# TESTING / MOCK TOGGLES (Mainly for local development and testing)
# -----------------------------------------------------------------------
ENABLE_MOCK_AUTH=false # If true, bypasses real authentication for testing
ENABLE_MOCK_SUPABASE=false # If true, uses mock Supabase client for testing

# -----------------------------------------------------------------------
# FRONTEND SPECIFIC (Next.js - these are prefixed with NEXT_PUBLIC_)
# These are built into the frontend bundle and are publicly accessible.
# -----------------------------------------------------------------------
NEXT_PUBLIC_APP_NAME=ChatChonk
NEXT_PUBLIC_API_URL=http://localhost:8080/api # For local development
# For Render deployment, this will be your backend service URL, e.g., https://chatchonk-api.onrender.com/api
# NEXT_PUBLIC_SUPABASE_URL=${SUPABASE_URL} # Expose Supabase URL to frontend
# NEXT_PUBLIC_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY} # Expose Supabase Anon Key to frontend
# It's common to duplicate SUPABASE_URL and SUPABASE_ANON_KEY with NEXT_PUBLIC_ prefix
# if the frontend needs to interact directly with Supabase (e.g., for auth, direct storage uploads).
NEXT_PUBLIC_SUPABASE_URL=YOUR_SUPABASE_PROJECT_URL_HERE
NEXT_PUBLIC_SUPABASE_ANON_KEY=YOUR_SUPABASE_ANON_KEY_HERE
