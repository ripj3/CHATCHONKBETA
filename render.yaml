# render.yaml
# Blueprint for deploying ChatChonk on Render
# Defines a single service: a FastAPI Docker backend that also serves the Next.js frontend.
#
# "Tame the Chatter. Find the Signal." - ChatChonk
# Author: Rip Jonesy (with Factory AI assistance)
# Version: 1.2.0 (Single Service)
# Date: May 30, 2025

version: "1"

# Environment Group for shared secrets (create this in Render Dashboard)
# Add SUPABASE_URL, SUPABASE_ANON_KEY, SUPABASE_SERVICE_ROLE_KEY,
# HUGGINGFACE_API_KEY, CHONK_SECRET_KEY, etc. to this group.
envVarGroups:
  - name: NEWBETAKEYS1 # Replace with your actual env group name in Render
    envVars:
      # CHCH3 (Main Database) Configuration
      - key: SUPABASE_URL
      - key: SUPABASE_KEY # Typically refers to SUPABASE_ANON_KEY for client-side
      - key: SUPABASE_SERVICE_ROLE_KEY

      # MSWAP (ModelSwapper Database) Configuration
      - key: MSWAP_SUPABASE_URL
      - key: MSWAP_SUPABASE_ANON_KEY
      - key: MSWAP_SUPABASE_SERVICE_ROLE_KEY

      # AI Provider Keys
      - key: HUGGINGFACE_API_KEY

      # Security Keys
      - key: CHONK_SECRET_KEY

      # Cloudflare KV Cache Configuration
      - key: CLOUDFLARE_API_TOKEN
      - key: CLOUDFLARE_ACCOUNT_ID
      - key: CLOUDFLARE_KV_NAMESPACE_ID

      # Public URLs needed by the frontend build process (now part of backend build)
      # These are referenced in next.config.js and will be baked into the static export.
      # Ensure the backend service URL from Render is used for these after first deployment.
      - key: NEXT_PUBLIC_API_URL
        # This should be the external URL of this 'chatchonk-api' service itself, suffixed with /api
        # Example: https://chatchonk-api-xxxx.onrender.com/api
        value: "https://<your-chatchonk-api-service-url>.onrender.com/api" # Placeholder - UPDATE THIS
      - key: NEXT_PUBLIC_APP_NAME
        value: "ChatChonk"
      - key: NEXT_PUBLIC_SUPABASE_URL
      - key: NEXT_PUBLIC_SUPABASE_ANON_KEY
      - key: NEXT_PUBLIC_FRONTEND_URL
        # This should be the external URL of this 'chatchonk-api' service itself.
        # Example: https://chatchonk-api-xxxx.onrender.com
        value: "https://<your-chatchonk-api-service-url>.onrender.com" # Placeholder - UPDATE THIS


services:
  # ---------------------------------------------------------------------------
  # Backend Service: FastAPI Application (ChatChonk API)
  # Also builds and serves the Next.js frontend static assets.
  # ---------------------------------------------------------------------------
  - type: web # Render's web service type for applications that listen for HTTP requests
    name: chatchonk-api # Name of the service in Render
    runtime: docker # Deploy using a Dockerfile that now includes frontend build
    branch: main-beta # Deploy from the 'main-beta' branch
    rootDir: . # Docker build context is the repository root
    # dockerfilePath: ./Dockerfile # Default location, no need to specify
    autoDeploy: false # Set to false to enable manual deploys during debugging
    buildFilter: # Optional: only build if changes are detected in these paths
      paths:
        - "backend/**"
        - "frontend/**" # Added frontend path as it's now part of this service's build
        - "templates/**"
        - "render.yaml"
        - "Dockerfile" # Rebuild if Dockerfile changes
    plan: starter # Render's "Starter" plan (e.g., 512MB RAM, shared CPU, approx $7/month)
    healthCheckPath: /api/health # Health check endpoint for the backend API
    envVars:
      - fromGroup: NEWBETAKEYS1 # Pull secrets from the defined environment group
      - key: PORT
        value: "10000" # Render provides this PORT; Gunicorn in Dockerfile will use it.
      - key: PYTHON_VERSION
        value: "3.11" # Informational for Render's Docker build system
      - key: ENVIRONMENT
        value: "production"
      - key: DEBUG
        value: "False"
      - key: RELOAD
        value: "False"
      # Paths below are inside the Docker container, assuming Dockerfile copies content to /app
      - key: UPLOAD_DIR
        value: "/app/uploads"
      - key: TEMP_DIR
        value: "/app/tmp"
      - key: EXPORT_DIR
        value: "/app/exports"
      - key: TEMPLATES_DIR
        value: "/app/templates"
      - key: ALLOWED_ORIGINS
        # IMPORTANT: Update this in the Render Dashboard after your service is deployed.
        # It should be the external URL of this 'chatchonk-api' service itself.
        # Example: https://chatchonk-api-xxxx.onrender.com
        # For multiple origins, use a comma-separated string.
        value: "https://<your-chatchonk-api-service-url>.onrender.com" # Placeholder - UPDATE THIS
      - key: API_V1_STR
        value: "/api"
      - key: PROJECT_NAME
        value: "ChatChonk"
    # Optional: Define disk for persistent storage if not using Supabase for everything
    # disks:
    #   - name: chatchonk-data
    #     mountPath: /app/persistent_data # Example mount path inside container
    #     sizeGB: 10
